{"version":3,"sources":["components/AddNote.jsx","components/Note.jsx","components/NoteList.jsx","components/Search.jsx","components/Header.jsx","App.jsx","index.js"],"names":["AddNote","handleAddNote","useState","noteText","setNoteText","className","rows","cols","placeholder","value","onChange","e","inputValue","target","length","onClick","trim","Note","id","text","date","handleDeleteNote","size","NoteList","notes","map","note","key","Search","handleSearchNote","type","Header","handleToggleDarkMode","previousDarkMode","App","setNotes","searchText","setSearchText","darkMode","setDarkMode","filter","toLowerCase","includes","Date","newNote","Math","random","toString","toLocaleDateString","newNotes","ReactDOM","render","document","getElementById"],"mappings":"2MAyCeA,EAtCC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAC9BC,EAD8B,KACpBC,EADoB,KAmBrC,OACE,yBAAKC,UAAU,YACb,8BACEC,KAAK,IACLC,KAAK,KACLC,YAAY,qBACZC,MAAON,EACPO,SArBe,SAACC,GACpB,IAAMC,EAAaD,EAAEE,OAAOJ,MAHP,IAIAG,EAAWE,QAAU,GACxCV,EAAYQ,MAoBZ,yBAAKP,UAAU,eACb,+BA1BiB,IA0BQF,EAASW,OAAlC,QACA,4BAAQC,QAlBU,WAClBZ,EAASa,OAAOF,OAAS,IAC3Bb,EAAcE,GACdC,EAAY,MAewBC,UAAU,QAA5C,W,OCdOY,EAhBF,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAC9B,OACE,yBAAKhB,UAAU,QACb,8BAAOc,GACP,yBAAKd,UAAU,eACb,+BAAQe,GACR,kBAAC,IAAD,CACEf,UAAU,cACViB,KAAK,QACLP,QAAS,kBAAMM,EAAiBH,SCS3BK,EAjBE,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAAOvB,EAAsC,EAAtCA,cAAeoB,EAAuB,EAAvBA,iBACxC,OACE,yBAAKhB,UAAU,cACb,kBAAC,EAAD,CAASJ,cAAeA,IACvBuB,EAAMC,KAAI,SAACC,GAAD,OACT,kBAAC,EAAD,CACEC,IAAKD,EAAKR,GACVA,GAAIQ,EAAKR,GACTC,KAAMO,EAAKP,KACXC,KAAMM,EAAKN,KACXC,iBAAkBA,SCEbO,EAbA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAChB,OACE,yBAAKxB,UAAU,UACb,kBAAC,IAAD,CAAUA,UAAU,eAAeiB,KAAK,UACxC,2BACEZ,SAAU,SAACC,GAAD,OAAOkB,EAAiBlB,EAAEE,OAAOJ,QAC3CqB,KAAK,OACLtB,YAAY,uBCQLuB,EAhBA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,qBAChB,OACE,yBAAK3B,UAAU,UACb,qCACA,4BACEU,QAAS,kBACPiB,GAAqB,SAACC,GAAD,OAAuBA,MAE9C5B,UAAU,QAJZ,iBCwCS6B,EAxCH,WAAO,IAAD,EACUhC,mBAAS,IADnB,mBACTsB,EADS,KACFW,EADE,OAGoBjC,mBAAS,IAH7B,mBAGTkC,EAHS,KAGGC,EAHH,OAKgBnC,oBAAS,GALzB,mBAKToC,EALS,KAKCC,EALD,KAuBhB,OACE,yBAAKlC,UAAS,UAAKiC,GAAY,cAC7B,yBAAKjC,UAAU,aACb,kBAAC,EAAD,CAAQ2B,qBAAsBO,IAC9B,kBAAC,EAAD,CAAQV,iBAAkBQ,IAC1B,kBAAC,EAAD,CACEb,MAAOA,EAAMgB,QAAO,SAACd,GAAD,OAClBA,EAAKP,KAAKsB,cAAcC,SAASN,MAEnCnC,cAzBQ,SAACkB,GACf,IAAMC,EAAO,IAAIuB,KACXC,EAAU,CACd1B,GAAI2B,KAAKC,SAASC,WAClB5B,KAAMA,EACNC,KAAMA,EAAK4B,sBAEPC,EAAQ,sBAAOzB,GAAP,CAAcoB,IAC5BT,EAASc,IAkBH5B,iBAfW,SAACH,GAClB,IAAM+B,EAAWzB,EAAMgB,QAAO,SAACd,GAAD,OAAUA,EAAKR,KAAOA,KACpDiB,EAASc,SCrBbC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.64a3a60e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst AddNote = ({ handleAddNote }) => {\r\n  const [noteText, setNoteText] = useState(\"\");\r\n\r\n  const characterLimit = 200;\r\n\r\n  const handleChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    if (characterLimit - inputValue.length >= 0) {\r\n      setNoteText(inputValue);\r\n    }\r\n  };\r\n\r\n  const handleSaveClick = () => {\r\n    if (noteText.trim().length > 0) {\r\n      handleAddNote(noteText);\r\n      setNoteText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"note new\">\r\n      <textarea\r\n        rows=\"8\"\r\n        cols=\"10\"\r\n        placeholder=\"Type to add a note\"\r\n        value={noteText}\r\n        onChange={handleChange}\r\n      ></textarea>\r\n      <div className=\"note-footer\">\r\n        <small>{characterLimit - noteText.length} Say</small>\r\n        <button onClick={handleSaveClick} className=\"save\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNote;\r\n","import React from \"react\";\r\nimport { MdDeleteForever } from \"react-icons/md\";\r\n\r\nconst Note = ({ id, text, date, handleDeleteNote }) => {\r\n  return (\r\n    <div className=\"note\">\r\n      <span>{text}</span>\r\n      <div className=\"note-footer\">\r\n        <small>{date}</small>\r\n        <MdDeleteForever\r\n          className=\"delete-icon\"\r\n          size=\"1.3em\"\r\n          onClick={() => handleDeleteNote(id)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\nimport AddNote from \"./AddNote\";\r\nimport Note from \"./Note\";\r\n\r\nconst NoteList = ({ notes, handleAddNote, handleDeleteNote }) => {\r\n  return (\r\n    <div className=\"notes-list\">\r\n      <AddNote handleAddNote={handleAddNote} />\r\n      {notes.map((note) => (\r\n        <Note\r\n          key={note.id}\r\n          id={note.id}\r\n          text={note.text}\r\n          date={note.date}\r\n          handleDeleteNote={handleDeleteNote}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n","import React from \"react\";\r\nimport { MdSearch } from \"react-icons/md\";\r\n\r\nconst Search = ({ handleSearchNote }) => {\r\n  return (\r\n    <div className=\"search\">\r\n      <MdSearch className=\"search-icons\" size=\"1.3em\" />\r\n      <input\r\n        onChange={(e) => handleSearchNote(e.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"type to search..\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst Header = ({ handleToggleDarkMode }) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Notes</h1>\r\n      <button\r\n        onClick={() =>\r\n          handleToggleDarkMode((previousDarkMode) => !previousDarkMode)\r\n        }\r\n        className=\"save\"\r\n      >\r\n        Toggle Mode\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport NoteList from \"./components/NoteList\";\nimport { useState } from \"react\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  const [darkMode, setDarkMode] = useState(false);\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: Math.random().toString(),\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  return (\n    <div className={`${darkMode && \"dark-mode\"}`}>\n      <div className=\"container\">\n        <Header handleToggleDarkMode={setDarkMode} />\n        <Search handleSearchNote={setSearchText} />\n        <NoteList\n          notes={notes.filter((note) =>\n            note.text.toLowerCase().includes(searchText)\n          )}\n          handleAddNote={addNote}\n          handleDeleteNote={deleteNote}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}